# This schema is auto-generated.

"""Verb conjugation"""
type Conjugation {
  name: String!
  form: String!
}

"""JMDICT and JMNEDICT dictionary entry"""
type Entry {
  id: ID!
  simple: EntryDisplay!
  kanji: [Kanji!]!
  kana: [Kana!]!

  """Field is only present when `source` property is jmdict"""
  sense: [Sense!]
  conjugations: [Conjugation!]

  """Field is only present when `source` property is jmnedict"""
  translation: [Translation!]

  """How many search results did we scrape through bing"""
  bingSearchResults: Float
  jlpt: JLPT_NUMBER
  source: String!
}

"""
Connection for Dictionary Entries. Currently uses cursor composed from `limit` and `skip`.
"""
type EntryConnection {
  totalCount: Float!
  edges: [EntryConnectionEdge!]!
  items: [Entry!]!
  pageInfo: PageInfo!
}

type EntryConnectionEdge {
  node: Entry!
  cursor: String!
}

"""Simplified schema type for reading JMDICT/JMNEDICT entry"""
type EntryDisplay {
  """Kanji or kana that is most commonly used for this word"""
  text: String!

  """
  Only present when the word is usually written in kana (`hasFurigana` is true)
  """
  furigana: String

  """Latin alphabet transcription"""
  romaji: String!
  hasFurigana: Boolean!

  """Primary English meaning"""
  translation: String!
  info: String!
}

type Gloss {
  text: String!
}

enum JLPT_NUMBER {
  N1
  N2
  N3
  N4
  N5
}

type Kana {
  text: String!

  """Transcription into latin alphabet"""
  romaji: String! @deprecated(reason: "auto-generated, not suitable for live use")
  common: Boolean!
  tags: [String!]!
}

type Kanji {
  text: String!
  kanjidic: [KanjiDicEntry!]!
  common: Boolean!
  tags: [String!]!
}

type KanjiDicEntry {
  kanji: String!
  kana: [String!]!
  romaji: [String!]!
  gloss: [String!]!
  wordsContainingThis(after: Int, first: Int): EntryConnection!
}

"""
Connection for KanjiDic Entries. Currently uses cursor composed from `limit` and `skip`.
"""
type KanjiDicEntryConnection {
  totalCount: Float!
  edges: [KanjiDicEntryConnectionEdge!]!
  items: [KanjiDicEntry!]!
  pageInfo: PageInfo!
}

type KanjiDicEntryConnectionEdge {
  node: KanjiDicEntry!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
  startCursor: String
}

type Query {
  jlptEntries(jlpt: JLPT_NUMBER!): [Entry!]!
  searchEntriesConnection(after: String, first: Int, key: String!): EntryConnection!
  getKanjiDicInformation(kanji: String!): KanjiDicEntry!
  searchKanjiDicEntries(after: String!, first: Float!, key: String!): KanjiDicEntryConnection!
}

type Sense {
  field: [String!]!
  dialect: [String!]!
  misc: [String!]!
  info: [String!]!
  gloss: [Gloss!]!
  partOfSpeech: [String!]!
}

"""Translation of JMNEDICT entry (names)"""
type Translation {
  translation: [TranslationItem!]!
  type: [String!]!
}

type TranslationItem {
  text: String!
}
