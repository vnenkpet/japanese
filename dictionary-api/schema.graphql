# This schema is auto-generated.

type Conjugation {
  name: String!
  form: String!
}

type Gloss {
  text: String!
}

type JmdictEntry {
  id: ID!
  kanji: [Kanji!]!
  kana: [Kana!]!
  sense: [Sense!]!
  conjugations: [Conjugation!]
}

type JmdictEntryConnection {
  totalCount: Float!
  edges: [JmdictEntryConnectionEdge!]!
  pageInfo: PageInfo!
}

type JmdictEntryConnectionEdge {
  node: JmdictEntry!
  cursor: String!
}

type Kana {
  text: String!
  romaji: String!
  common: Boolean!
  tags: [String!]!
}

type Kanji {
  text: String!
  kanjidic: [KanjiDicEntry!]!
  common: Boolean!
  tags: [String!]!
}

type KanjiDicEntry {
  kanji: String!
  kana: [String!]!
  romaji: [String!]!
  gloss: [String!]!
  wordsContainingThis(after: Int, first: Int): JmdictEntryConnection!
}

type KanjiDicEntryConnection {
  totalCount: Float!
  edges: [KanjiDicEntryConnectionEdge!]!
  pageInfo: PageInfo!
}

type KanjiDicEntryConnectionEdge {
  node: KanjiDicEntry!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
  startCursor: String
}

type Query {
  searchJmdictEntries(after: String, first: Int, key: String!): JmdictEntryConnection!
  getKanjiDicInformation(kanji: String!): KanjiDicEntry!
  searchKanjiDicEntries(after: String!, first: Float!, key: String!): KanjiDicEntryConnection!
}

type Sense {
  field: [String!]!
  dialect: [String!]!
  misc: [String!]!
  info: [String!]!
  gloss: [Gloss!]!
  partOfSpeech: [String!]!
}
